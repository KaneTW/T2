//init(I,P,S,U,PC):=S=0,U=0,PC=1.
//next(I,P,S,U,PC,Ip,Pp,Sp,Up,PCp):=
//    PC=1,Ip=I,Pp=P,Sp=1,Up=U,PCp=2;
//    PC=2,Ip=I,Pp=P,Sp=0,Up=U,PCp=3;
//    PC=3,I<P,Ip=I,Pp=P,Sp=S,Up=U,PCp=4;
//    PC=3,I>=P,Ip=I,Pp=P,Sp=S,Up=U,PCp=6;
//    PC=4,Ip=I,Pp=P,Sp=S,Up=U,PCp=5;
//    PC=4,Ip=I,Pp=P,Sp=S,Up=U,PCp=6;
//    PC=5,Ip=I+1,Pp=P,Sp=S,Up=U,PCp=3;
//    PC=5,Ip=I,Pp=P,Sp=S,Up=U,PCp=6;
//    PC=6,Ip=I,Pp=P,Sp=S,Up=1,PCp=7;
//    PC=6,Ip=I,Pp=P,Sp=S,Up=U,PCp=8;
//    PC=7,Ip=I,Pp=P,Sp=S,Up=0,PCp=8.

//init(I,P,S,U,PC):=S=0,U=0,PC=1.
START: init;
FROM: init;
varS := 0;
varU := 0;
TO: loc1;

//    PC=1,Ip=I,Pp=P,Sp=1,Up=U,PCp=2;
FROM: loc1;
varS := 1;
TO: loc2;

//    PC=2,Ip=I,Pp=P,Sp=0,Up=U,PCp=3;
FROM: loc2;
varS := 0;
TO: loc3;

//    PC=3,I<P,Ip=I,Pp=P,Sp=S,Up=U,PCp=4;
FROM: loc3;
assume(varI <= varP);
TO: loc4;

//    PC=3,I>=P,Ip=I,Pp=P,Sp=S,Up=U,PCp=6;
FROM: loc3;
assume(varI >= varP);
TO: loc6;

//    PC=4,Ip=I,Pp=P,Sp=S,Up=U,PCp=5;
FROM: loc4;
TO: loc5;

//    PC=4,Ip=I,Pp=P,Sp=S,Up=U,PCp=6;
FROM: loc4;
TO: loc6;

//    PC=5,Ip=I+1,Pp=P,Sp=S,Up=U,PCp=3;
FROM: loc5;
varI := varI + 1;
TO: loc3;

//    PC=5,Ip=I,Pp=P,Sp=S,Up=U,PCp=6;
FROM: loc5;
TO: loc6;

//    PC=6,Ip=I,Pp=P,Sp=S,Up=1,PCp=7;
FROM: loc6;
varU := 1;
TO: loc7;

//    PC=6,Ip=I,Pp=P,Sp=S,Up=U,PCp=8;
FROM: loc6;
TO: loc8;

//    PC=7,Ip=I,Pp=P,Sp=S,Up=0,PCp=8.
FROM: loc7;
varU := 0;
TO: loc8;